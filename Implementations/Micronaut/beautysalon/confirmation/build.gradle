plugins {
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
}


repositories {
	mavenCentral()
	maven { url "https://jcenter.bintray.com" }
}
	
test {
	useJUnitPlatform()
}
    tasks.withType(JavaCompile){
	options.encoding = "UTF-8"
	options.compilerArgs.add('-parameters')
}


mainClassName = "beautysalon.confirmation.Application"

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation" 
    annotationProcessor "io.micronaut:micronaut-security"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    runtime "com.h2database:h2"
	runtime "io.micronaut:micronaut-discovery-client"
    runtime 'io.zipkin.brave:brave-instrumentation-http'
    runtime 'io.zipkin.reporter2:zipkin-reporter'
    compile "io.micronaut:micronaut-security"
    compile 'io.opentracing.brave:brave-opentracing'
    compile "io.micronaut:micronaut-tracing"
    compile "io.micronaut.configuration:micronaut-micrometer-core"
    compile "io.micronaut.configuration:micronaut-micrometer-registry-statsd"
    compile "io.micronaut:micronaut-management"
    compile 'io.micronaut:micronaut-management'
    compile "io.micronaut.configuration:micronaut-hibernate-jpa" 
	compile "io.micronaut.configuration:micronaut-jdbc-hikari" 
	compile "io.micronaut.configuration:micronaut-hibernate-validator"
	compile "io.micronaut:micronaut-http-client"
	compile "org.apache.commons:commons-math3:3.6.1"
	compile 'io.micronaut.configuration:micronaut-rabbitmq'
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

run {    
    /* pass all system properties */
    systemProperties System.getProperties()
}

shadowJar {
    mergeServiceFiles()
}
